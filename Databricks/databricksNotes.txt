7-- Introduction
1) At the core of Azure Databricks is opensource Distributed compute processing engine called Apache spark
2) Databricks is a company created by founders of Apache Spark to make it easier to work with Spark
3) Azure databricks --> Spark, Databricks, Azure
	3.1) Spark: Distributed compute processing engine (yahoo, ebay, netflick) multiple petabytes of data, 1000s of nodes
			: 100 times faster than Hadoop , has in-memory
			: Runs on distributed computed platform
			: Unified engine which supports SQL, Streaming, ML, etc..
			: Spark core (RDD)<---> Python, R ...., takes care taskSchedling,MmryMgmt., fault rec, StorageInterction, Main programming abstraction 				API called RDD... RDDs are collection of various compute items distributed across various nodes
			: Spark introduced SQL engine that has (Catalyst Optimizer and Tungsten)
			: Catalyst Optimized: converts a computational query--> highly optimized execution plan.
			: Tungsten: Memory Management and CPU efficiency. 
			: High level abstractions like DF APIs make it easier to develop apps, So use DF API, as it uses SQL optimizations, rather than RDDAPI
			: Spark has a standalone resource manager, But you can chose other resource managers like Yarn, Apache Mesos, Kubernetes

	3.2) Databricks	: Makes it easier to work with spark, as to work with Spark we need to manage clusters, security, 3rd party products.
			: We need to create cluster and install software to work with spark.
			: Databricks gives to ability to create clusters in a few clicks. chose runtime 
			: Has Jupyter type Notebooks
			: Provides Administration controls
			: Optimized runtime (5x faster than vanilla Apache Spark), and ability to create tables	
			: Open Source Project Delta Lake for Analysis, and also SQL Analytics, ML flow
			: Also provides integration with other Microsoft services
				
7-- Introduction
8-- Create Databricks Sevice in Azure
	Azure Portal
		-- Create Resource
			-- Azuere databrics
				-- create resourceGroup, workspace. 
				-- Network , take no options
				-- leave encryption to default
				-- tag 
				-- Deploy and check status.. in 4 minutes it will become active... 
				-- Pin and then new dashboard Launch workspace.
8-- Create Databricks Service in Azure

9-- Databricks User Interface Overview
	-- At this stage, from home you will see Databricks workspace (dbc-ws) that you created. Its type is Azure Databricks Services. click on it.
	-- After launching the databricks, you will see menu items.
	-- left Nav has multiple products (Data Warehousing, Data Engineering and ML)
	-- Top part has common functionalities.
	-- SQL has Databricks SQL... For SQL Data Warehouses on Lakehouse
	-- Data Engineering and ML
	-- New (Notebook, Query, Dashboard, job, DTL Pipeline, Alert, Model )
	-- Workspace is a container for holding folders and files. 
		-- each user has a workspace and a shared workspace also  
		-- Repo -- for GIT and other version control
	-- Catalog is for creating tables in databricks
	-- Workflows .. jobs, Jobruns, Delta live tables (ETL)
	-- Compute .. to create clusters
	-- Data Engineering has repeate of Workflows
	-- Advance serach at top searches everywhere in workspace.. You can also switch workspaces.
9-- Databricks User Interface Overview

10-- Azure Databricks Architecture
	-- Control Plane (Databricks Subscription) {clusterManager, Databrick UX, DBFS, Metadata about clusters, files mounted}
	-- Data Plane (Customer Subscription) 4 resources created {VertualNetwork-VNet, NetworkSecurityGroup,NSG, AzureBlockStorage,DatabricksWorkspace}
	-- Our data always resides and processed in our subscription
10-- Azure Databricks Architecture

11-- Databricks Clusters
	-- what is cluster
	-- two types of clusters
	-- configuration options
	-- create cluster
	-- pricing
	-- cost control
11-- Databricks Clusters