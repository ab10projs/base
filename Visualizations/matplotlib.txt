1) simple plot
	import matplotlib as mpl
	import matplotlib.pyplot as plt
	plt.plot([1.3, 1.5])
	plt.show()

2) Add title and label to above
	import matplotlib as mpl
	import matplotlib.pyplot as plt
	plt.plot([1.3, 1.5])
	plt.title("Title")
	plt.xlabel("X label")
	plt.ylabel("y label")
	plt.show()

3) plot only one line
	plt.plot([1.3, 1.3, 1.4, 1.8]) # plots one line with x axis as count of values of list, which takes y axis


4 plot two lines in same fig with both x and y values given
    x = [1,2,3,4,5]
    y = [1,4,9,16,25]
    plt.plot(x,y) # plots first line with given values of both x and y axis
    
    x1 = [1.2,2.1,3.1,4.3,5.9]
    y1 = [1.3,4.1,9.2,16.3,25.8]
    plt.plot(x1, y1)
    plt.show() # plots second line with given values of both x and y axis

---- Default Environment variables set and reset -----
	print(matplotlib.rcParams) 
	matplotlib.rcdefaults()  # to reset default
---- Default Environment variables set and reset -----

---- Full view of default output window ----
	wm = plt.get_current_fig_manager()
	wm.window.state('zoomed')
---- Full view of default output window ----

5 creating a plot with style defined
    import matplotlib
    import matplotlib.pyplot as plt
    import pandas as pd
    df = pd.read_csv("ACC.csv")
    matplotlib.rc('lines', linewidth=1, linestyle='-', marker='*')
    matplotlib.rcParams['font.size'] = 15
    matplotlib.rcParams['lines.markersize'] = 20
    x = df['d']
    y = df['c']
    x = (x[-10:-1:1])
    y = (y[-10:-1:1])
    plt.plot(x, y)
    plt.show()
    df = pd.read_csv("ACC.csv")
    matplotlib.rc('lines', linewidth=1, linestyle='-', marker='*')
    matplotlib.rcParams['font.size'] = 15
    matplotlib.rcParams['lines.markersize'] = 20
    x = df['d']
    y = df['c']
    x = (x[-10:-1:1])
    y = (y[-10:-1:1])
    plt.plot(x, y)
    plt.show()

6)  ---- line plot using dataframe starts here ------
    
    import matplotlib
    import matplotlib.pyplot as plt
    import pandas as pd
    df = pd.read_csv("ACC.csv")
    df2 = df[['d', 'c']]
    df2.set_index('d', inplace=True)
    print(df2.head())
    plt.plot(df2)
    plt.show()

6)  ---- line plot using dataframe ends   here ------



7) ----  bar plot simple ----
    import matplotlib
    import matplotlib.pyplot as plt
    month_num = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
    ut_sld = [100, 200, 300, 400, 555, 666, 777, 888, 999, 1000, 1100, 1200]
    plt.bar(month_num, ut_sld)
    plt.show()
7) ----  bar plot simple ----

8) ---- bar plot with values on top of bar and how the position of text is worked out -------
    import matplotlib
    import matplotlib.pyplot as plt
    import calendar
    month_num = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
    ut_sld = [100, 200, 300, 400, 555, 666, 777, 888, 999, 1000, 1100, 1200]
    fig, ax = plt.subplots()  # plt.subplots allow us to define the layout of figure in terms of number of figues and how to organize
    plt.xticks(month_num, calendar.month_name[1:13], rotation=20)
    plot = ax.bar(month_num, ut_sld)
    for rect in plot:
        height = rect.get_height()  # gets the value of bar that needs to be shown
        ax.text(rect.get_x() + rect.get_width() / 2, 1.0002 * height, '%d' % int(height), ha="center", va="bottom")
        # above value will get text and place it just above the height of each bar
    plt.show()
8) ---- bar plot with values on top of bar and how the position of text is worked out -------

9) ----- bar horizontal ------------
    import matplotlib
    import matplotlib.pyplot as plt
    import calendar
    month_num = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
    ut_sld = [100, 200, 300, 400, 555, 666, 777, 888, 999, 1000, 1100, 1200]
    fig, ax = plt.subplots()  # plt.subplots allow us to define the layout of figure in terms of number of figues and how to organize
    plt.yticks(month_num, calendar.month_name[1:13], rotation=20)
    plot = ax.barh(month_num, ut_sld)
    plt.show()
9) ----- bar horizontal ------------

10) ------- Scatter plot ---------
    import matplotlib
    import matplotlib.pyplot as plt
    import calendar
    import pandas as pd
    plt.figure(figsize=(10, 6))
    df = pd.read_csv("ACC.csv")
    df = df[df['Symbol'] == 'SAIL']
    print(df.head())
    x = df['d']
    y = df['Underlying Value']
    print(x)
    plt.scatter(x, y)
    plt.xticks(rotation=20)
    plt.show()
10) ------- Scatter plot ---------

11) ------- Scatter plot with colors ----------------
    import matplotlib
    import matplotlib.pyplot as plt
    import calendar
    import pandas as pd
    iris = pd.read_csv("iris.csv", sep=',')
    iris['variety'] = iris['variety'].map({'Setosa': 0, 'Versicolor': 1, 'Virginica': 2})
    plt.scatter(iris['petal_length'], iris['petal_width'], c=iris['variety'])  # here c is color
    plt.show()
11) ------- Scatter plot with colors ----------------

12) ------- Bubble plot ----------------
    import matplotlib
    import matplotlib.pyplot as plt
    import calendar
    import pandas as pd
    iris = pd.read_csv("iris.csv", sep=',')
    iris['variety'] = iris['variety'].map({'Setosa': 0, 'Versicolor': 1, 'Virginica': 2})
    plt.scatter(iris['petal_length'], iris['petal_width'], c=iris['variety'], s=50 * iris['petal_length'] * iris['petal_width'], alpha=.35)  # here c is color
    plt.show()
12) ------- Bubble plot ----------------

13) ------- Stacked --------------------

13) ------- Stacked --------------------