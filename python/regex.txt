1) RegEx is a sequence of characters which define a search pattern
2) Can be used for replacing text
3) has literals (ordinary charaters and metacharacters)  ....  pattern = re.compile("file\d+.txt")  ....  here \d+ is metacharacter and rest are litrals
4) You can compile a regex into pattern object. This compiled pattern object has many methods 
pattern = re.compile("file\d+.txt", )   
pattern = re.compile("file\d+.txt", flags=re.IGNORECASE)  ... flag for ignorecase
5) methods
match()  determines if re matches at the begining of string , but pos and endpos can be used to start at later position
search()  scans through a string to check any match.
findall()  finds all substrings and returns all as list
finditer()  finds all substrings and returns all as iterator

MATCH
txt = "txtpattenttxtfile file1, file2 file90.txt"
pattern = re.compile("txtpattent", flags=re.IGNORECASE)
res = re.match(pattern,txt)
print(res.span())   .. tells the index where the substring was found in string
res= pattern.match(txt, pos=2)   .. we can also write like this
print(res.group())  ... will return   txtpattent   if  txt = "01txtpattenttxtfile file1, file2 file90.txt"

SEARCH
import re
txt = "01hdnejde....txtpattenttxtfile file1, file2 file90.txt"
pattern = re.compile("txtpattent", flags=re.IGNORECASE)
res = pattern.search(txt)
print(res)
print(res.group())
print(res.span())

FINDALL
txt = "01hdnejde....txtpattenttxtfile file1, txtpattent file2 file90.txt"
pattern = re.compile("txtpattent", flags=re.IGNORECASE)
res = pattern.findall(txt)
print(res)   ... gives the list

FINDITER
txt = "01hdnejde....txtpattenttxtfile file1, txtpattent file2 file90.txt"
pattern = re.compile("txtpattent", flags=re.IGNORECASE)
res = pattern.finditer(txt)
for i in res:
    print(i.group())    .... returns a iterable object

6) escape special characters like $
txt = "cost is 15$"
pattern = re.compile("15\$")   ... by escaping $ with \ , it will be treated like a litral
\ ^ $ . | ? * ( ) { } [ ] 

7) Backslash plague

print("C:\\Windows\\System32")  ... here output shows single \ because of python interpreter.   \\ is escape sequence to pring single \
So, escaping at two different levels is needed, one at interpriter level and other at regex engine level
1) as first step, python engine will replace \\ into \ and this is passed to reges
2) if regex engine receives a single \, it will consider it as a metacharacter. 

So in example below.

txt = """C:\Windows
C:\Windows\System32
C:\Windows\Python
"""
pattern = re.compile(r"C:\\Windows\\System32")    ... here as 1st step \\ is used and row string is used, so that python interpriter considers it as \\ and passes to regex engine
.... as 2nd step, regex gets \\ and escapes to a single \ and finds a match in txt
res = re.findall(pattern,txt)   
print(res)

QUANTIFIERS
?  .. 0 or 1
*  .. 0 or more
+  .. 1 or more
{n,m}.. between n and m
{n,} .. atleast n times
{,n} .. atmost n times
[0-9]  means any number between 0 to 9













